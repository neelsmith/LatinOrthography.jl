var documenterSearchIndex = {"docs":
[{"location":"apis/apis/#API-documentation","page":"API documentation","title":"API documentation","text":"","category":"section"},{"location":"apis/apis/","page":"API documentation","title":"API documentation","text":"TBA","category":"page"},{"location":"#LatinOrthography.jl:-documentation","page":"User's guide","title":"LatinOrthography.jl: documentation","text":"","category":"section"},{"location":"","page":"User's guide","title":"User's guide","text":"Implementations of the HCMID OrthographicSystem interface for Latin texts","category":"page"},{"location":"#Latin23","page":"User's guide","title":"Latin23","text":"","category":"section"},{"location":"","page":"User's guide","title":"User's guide","text":"Latin23 is an orthography for Latin texts with 23 alphabetic characters — that is, orthographies with a single character for vocalic/consonantal i/j and a single character for vocalic/consonantal  u/v.  The function latin23 creates an instance of this orthography.  It is a subtype of the HCMID OrthographicSystem.","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"using LatinOrthography\northo  =  latin23()\ntypeof(ortho) |> supertype","category":"page"},{"location":"#Valid-characters-and-token-types","page":"User's guide","title":"Valid characters and token types","text":"","category":"section"},{"location":"","page":"User's guide","title":"User's guide","text":"The Latin23 type implements the basic functions of the OrthographicSystem interface:","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"codepoints: returns a complete list of codepoints allowed in this orthography\ntokentypes: enumeration of the types of tokens recognized in this orthography","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"codepoints(ortho)","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"tokentypes(ortho)","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"These give us (for free!) implementations of the OrthographicSystem's validchar and validstring functions.","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"using Orthography\nvalidchar(ortho, \"a\")","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"validchar(ortho, \"β\")","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"validstring(ortho, \"Nunc est bibendum.\")","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"validstring(ortho, \"μῆνιν ἄειδε\")","category":"page"},{"location":"#Tokenizing-a-string","page":"User's guide","title":"Tokenizing a string","text":"","category":"section"},{"location":"","page":"User's guide","title":"User's guide","text":"The tokenize function returns an array of OrthographicTokens, each of which has a string value and a token type from the set of token types possible for this orthography.","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"tkns = tokenize(ortho, \"Nunc est bibendum.\")","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"tkns[1].text","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"tkns[1].tokencategory","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"tkns[4].text","category":"page"},{"location":"","page":"User's guide","title":"User's guide","text":"tkns[4].tokencategory","category":"page"}]
}
